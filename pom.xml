<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>ru.doccloud</groupId>
    <artifactId>jooq-doc</artifactId>
    <packaging>pom</packaging>
    <version>0.1</version>

    <!--<parent>-->
        <!--<groupId>ru.doccloud</groupId>-->
        <!--<artifactId>jooq-doc-spring-boot-parent</artifactId>-->
        <!--<version>0.1</version>-->
        <!--<relativePath>/spring_boot_parent</relativePath>-->
    <!--</parent>-->

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <!--<version>${spring.boot.version}</version>-->
    </parent>


    <properties>
    	<opencmis.version>1.0.0</opencmis.version>
        <bonecp.version>0.8.0.RELEASE</bonecp.version>
        <h2.version>1.3.174</h2.version>
        <postgresql.version>9.4.1210</postgresql.version>
        <!--<jackson.version>2.7.3</jackson.version>-->
        <jdk.version>1.8</jdk.version>
        <jsonpath.version>0.8.1</jsonpath.version>
        <jtransfo.version>0.12</jtransfo.version>
        <jooq.version>3.6.1</jooq.version>
        <jooq.generator.db.dialect>org.jooq.util.postgres.PostgresDatabase</jooq.generator.db.dialect>
        <slf4j.version>1.7.5</slf4j.version>
        <!--<spring.version>4.1.2.RELEASE</spring.version>-->
        <!--<spring.version>4.2.5.RELEASE</spring.version>-->
        <spring.data.commons.version>1.7.1.RELEASE</spring.data.commons.version>
        <build.profile.id>doccloud</build.profile.id>
        <skip.db.creation>false</skip.db.creation>
        <skip.integration.tests>true</skip.integration.tests>
        <skip.unit.tests>true</skip.unit.tests>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <main.basedir>${project.basedir}</main.basedir>
        <phase.prop>none</phase.prop>
        <spring.boot.version>1.5.6.RELEASE</spring.boot.version>
    </properties>

    <modules>
        <module>storageactions</module>
        <module>storagemanager</module>
        <module>common</module>
        <module>amazon</module>
        <module>filestorage</module>
        <module>config</module>
        <module>cmis</module>
	    <module>docservices</module>
        <module>docmanagement</module>
        <module>doccontrollers</module>
        <module>jooq-web</module>
        <module>jooq-spring-boot</module>
    </modules>

    <profiles>
        <profile>
            <id>dev</id>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>

                    <!--<plugin>-->
                        <!--<groupId>org.springframework.boot</groupId>-->
                        <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                    <!--</plugin>-->
                </plugins>
            </build>

            <properties>
                <build.profile.id>dev</build.profile.id>
            </properties>
        </profile>
        <!--todo create another profile for spring boot version-->
        <profile>
            <id>doccloud</id>
            <properties>
	          <spring.boot.mainclass>ru.doccloud.webapp.WebApplication</spring.boot.mainclass>
	        </properties>
            <build>
                <plugins>

                    <!--<plugin>-->
                        <!--<groupId>org.springframework.boot</groupId>-->
                        <!--<artifactId>spring-boot-maven-plugin</artifactId>-->
                    <!--</plugin>-->

                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>properties-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>integration-test</id>
            <properties>
                <build.profile.id>integration-test</build.profile.id>
                <skip.integration.tests>false</skip.integration.tests>
                <skip.unit.tests>true</skip.unit.tests>
            </properties>
        </profile>
    </profiles>
    <build>


        <pluginManagement>
        	<plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <!--<execution>-->
                            <!--<phase>generate-sources</phase>-->
                            <!--<goals>-->
                                <!--<goal>add-source</goal>-->
                            <!--</goals>-->
                            <!--<configuration>-->
                                <!--<sources>-->
                                    <!--<source>${project.build.directory}/generated-sources</source>-->
                                <!--</sources>-->
                            <!--</configuration>-->
                        <!--</execution>-->
                        <execution>
                            <id>add-integration-test-sources</id>
                            <phase>generate-test-sources</phase>
                            <goals>
                                <goal>add-test-source</goal>
                            </goals>
                            <configuration>
                                <sources>
                                    <source>src/integration-test/java</source>
                                </sources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>add-integration-test-resources</id>
                            <phase>generate-test-resources</phase>
                            <goals>
                                <goal>add-test-resource</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>src/integration-test/resources</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <!-- Used for unit tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                    <configuration>
                        <skipTests>${skip.unit.tests}</skipTests>
                        <excludes>
                            <exclude>**/IT*.java</exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <!-- Used for integration tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.16</version>
                    <executions>
                        <!-- States that both integration-test and verify goals of the Failsafe Maven plugin are executed. -->
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <!-- Skips integration tests if the value of skip.integration.tests property is true -->
                                <skipTests>${skip.integration.tests}</skipTests>
                                <systemPropertiesFile>profiles/${build.profile.id}/system.properties</systemPropertiesFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <source>${jdk.version}</source>
                        <target>${jdk.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>1.0-alpha-2</version>
                    <executions>
                        <execution>
                            <phase>initialize</phase>
                            <goals>
                                <goal>read-project-properties</goal>
                            </goals>
                            <configuration>
                                <files>
                                    <file>${main.basedir}/profiles/${build.profile.id}/config.properties</file>
                                </files>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sql-maven-plugin</artifactId>
                    <version>1.5</version>

                    <configuration>
                        <skip>${skip.db.creation}</skip>
                        <fileset>
                            <basedir>${main.basedir}/dbconfig</basedir>

                        </fileset>
                    </configuration>

                    <executions>
                        <execution>
                            <id>create-database-pg</id>
                            <phase>${phase.prop}</phase>
                            <goals>
                                <goal>execute</goal>
                            </goals>
                            <configuration>
                                <driver>${db.driver}</driver>
                                <url>${db.url}</url>
                                <username>${db.username}</username>
                                <password>${db.password}</password>

                                <autocommit>true</autocommit>

                            </configuration>
                        </execution>
                    </executions>


                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgresql.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.0.2</version>
                </plugin>


                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <!--<version>${spring.boot.version}</version>-->
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.jooq</groupId>
                    <artifactId>jooq-codegen-maven</artifactId>
                    <version>${jooq.version}</version>

                    <executions>
                        <execution>
                            <id>generate-pg</id>
                            <phase>${phase.prop}</phase>
                            <goals>
                                <goal>generate</goal>
                            </goals>
                        </execution>
                    </executions>

                    <dependencies>
                        <dependency>
                            <groupId>org.postgresql</groupId>
                            <artifactId>postgresql</artifactId>
                            <version>${postgresql.version}</version>
                        </dependency>
                    </dependencies>

                    <configuration>
                        <jdbc>
                            <driver>${db.driver}</driver>
                            <url>${db.url}</url>
                            <user>${db.username}</user>
                            <password>${db.password}</password>
                        </jdbc>

                        <generator>
                            <database>
                                <name>${jooq.generator.db.dialect}</name>
                                <includes>.*</includes>
                                <excludes></excludes>
                                <inputSchema>public</inputSchema>
                                <customTypes>
                                    <customType>
                                        <!-- Specify the name of your custom type. Avoid using names from org.jooq.impl.SQLDataType -->
                                        <name>JsonNode</name>

                                        <!-- Specify the Java type of your custom type. This corresponds to the Binding's <U> type. -->
                                        <type>com.fasterxml.jackson.databind.JsonNode</type>

                                        <!-- Associate that custom type with your binding. -->
                                        <binding>ru.doccloud.common.jooq.PostgresJSONJacksonJsonNodeBinding</binding>
                                    </customType>
                                </customTypes>
                                <!-- Optionally, reuse your configuration via a <customType/>, first -->
                                <forcedTypes>
                                    <forcedType>

                                        <name>JsonNode</name>

                                        <!-- Add a Java regular expression matching fully-qualified columns. Use the pipe to separate several expressions.

                                             If provided, both "expressions" and "types" must match. -->
                                        <expression>.*DATA.*</expression>

                                        <!-- Add a Java regular expression matching data types to be forced to
                                             have this type.

                                             Data types may be reported by your database as:
                                             - NUMBER              regexp suggestion: NUMBER
                                             - NUMBER(5)           regexp suggestion: NUMBER\(5\)
                                             - NUMBER(5, 2)        regexp suggestion: NUMBER\(5,\s*2\)
                                             - any other form

                                             It is thus recommended to use defensive regexes for types.

                                             If provided, both "expressions" and "types" must match. -->
                                        <types>.*</types>
                                    </forcedType>
                                </forcedTypes>
                            </database>
                            <generate>
                                <records>true</records>
                            </generate>
                            <target>
                                <packageName>ru.doccloud.document.jooq.db</packageName>
                                <!--<directory>target/generated-sources/jooq</directory>-->
                                <directory>src/main/java</directory>
                            </target>
                        </generator>
                    </configuration>
                </plugin>
                <!-- Integrates the frontend build process with the Maven build that builds the backend application -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.8</version>
                    <executions>
                        <execution>
                            <phase>generate-sources</phase>
                            <configuration>
                                <target>
                                    <property name="project.basedir" value="${project.basedir}"/>
                                    <ant antfile="${basedir}/src/main/ant/build.xml" target="dist"/>
                                </target>
                            </configuration>
                            <goals>
                                <goal>run</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>2.4</version>
                    <configuration>
                        <warName>jooq</warName>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <classesClassifier>true</classesClassifier>
                        <webResources>
                            <resource>
                                <directory>frontend/_public/frontend</directory>
                                <targetPath>/frontend</targetPath>
                                <filtering>false</filtering>
                            </resource>
                        </webResources>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-maven-plugin</artifactId>
                    <version>9.3.13.v20161014</version>
                    <configuration>
                        <stopKey>todostop</stopKey>
                        <stopPort>9999</stopPort>
                        <systemPropertiesFile>profiles/${build.profile.id}/system.properties</systemPropertiesFile>
                        <webAppConfig>
                            <war>${basedir}/target/jooq.war</war>
                            <contextPath>/</contextPath>
                            <baseResource implementation="org.eclipse.jetty.util.resource.ResourceCollection">
                                <resourcesAsCSV>src/main/webapp,frontend/_public</resourcesAsCSV>
                            </baseResource>
                        </webAppConfig>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-eclipse-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <wtpversion>2.0</wtpversion>
                        <wtpContextName>server</wtpContextName>
                        <downloadSources>true</downloadSources>
                        <downloadJavadocs>true</downloadJavadocs>
                        <linkedResources>
                            <linkedResource>
                                <name>src/main/webapp/WEB-INF/sun-jaxws.xml</name>
                                <type>1</type>
                                <location>PROJECT_LOC/target/${project.build.finalName}/WEB-INF/sun-jaxws.xml</location>
                            </linkedResource>
                            <linkedResource>
                                <name>src/main/webapp/WEB-INF/web.xml</name>
                                <type>1</type>
                                <location>PROJECT_LOC/target/${project.build.finalName}/WEB-INF/web.xml</location>
                            </linkedResource>
                            <linkedResource>
                                <name>src/main/webapp/WEB-INF/cmis10</name>
                                <type>2</type>
                                <location>PROJECT_LOC/target/${project.build.finalName}/WEB-INF/cmis10</location>
                            </linkedResource>
                            <linkedResource>
                                <name>src/main/webapp/WEB-INF/cmis11</name>
                                <type>2</type>
                                <location>PROJECT_LOC/target/${project.build.finalName}/WEB-INF/cmis11</location>
                            </linkedResource>
                        </linkedResources>
                    </configuration>
                </plugin>
        		<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
        		<plugin>
        			<groupId>org.eclipse.m2e</groupId>
        			<artifactId>lifecycle-mapping</artifactId>
        			<version>1.0.0</version>
        			<configuration>
        				<lifecycleMappingMetadata>
        					<pluginExecutions>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.mojo
        								</groupId>
        								<artifactId>
        									properties-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.0-alpha-2,)
        								</versionRange>
        								<goals>
        									<goal>
        										read-project-properties
        									</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<execute/>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.mojo
        								</groupId>
        								<artifactId>
        									sql-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.5,)
        								</versionRange>
        								<goals>
        									<goal>execute</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<execute/>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>org.jooq</groupId>
        								<artifactId>
        									jooq-codegen-maven
        								</artifactId>
        								<versionRange>
        									[3.4.4,)
        								</versionRange>
        								<goals>
        									<goal>generate</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<execute/>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.apache.maven.plugins
        								</groupId>
        								<artifactId>
        									maven-antrun-plugin
        								</artifactId>
        								<versionRange>
        									[1.7,)
        								</versionRange>
        								<goals>
        									<goal>run</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<execute/>
        							</action>
        						</pluginExecution>
        						<pluginExecution>
        							<pluginExecutionFilter>
        								<groupId>
        									org.codehaus.mojo
        								</groupId>
        								<artifactId>
        									build-helper-maven-plugin
        								</artifactId>
        								<versionRange>
        									[1.8,)
        								</versionRange>
        								<goals>
        									<goal>
        										add-test-resource
        									</goal>
        									<goal>add-test-source</goal>
        								</goals>
        							</pluginExecutionFilter>
        							<action>
        								<execute/>
        							</action>
        						</pluginExecution>
        					</pluginExecutions>
        				</lifecycleMappingMetadata>
        			</configuration>
        		</plugin>
        	</plugins>
        </pluginManagement>
    </build>

    

    <dependencyManagement>



        <dependencies>

            <dependency>
                <groupId>net.bull.javamelody</groupId>
                <artifactId>javamelody-core</artifactId>
                <version>1.65.0</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.8.6</version>
            </dependency>

            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>1.8.6</version>
            </dependency>



            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-web</artifactId>
                <version>${spring.boot.version}</version>
            </dependency>


            <!-- Commons Lang -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.1</version>
        </dependency>

		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-io</artifactId>
		    <version>1.3.2</version>
		</dependency>

		<dependency>
		    <groupId>commons-fileupload</groupId>
		    <artifactId>commons-fileupload</artifactId>
		    <version>1.3.2</version>
		</dependency>
		
        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>16.0.1</version>
        </dependency>

		<!-- Hazelcast -->
	   
		<dependency>
	        <groupId>com.hazelcast</groupId>
	        <artifactId>hazelcast</artifactId>
	        <version>3.8.1</version>
	    </dependency>
	    
		<dependency>
	        <groupId>com.hazelcast</groupId>
	        <artifactId>hazelcast-all</artifactId>
	        <version>3.8.1</version>
	    </dependency>
	    
        <!-- AMAZON -->
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.11.6</version>
        </dependency>


        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>




        <!-- Spring Data Commons -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-commons</artifactId>
            <version>${spring.data.commons.version}</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib</artifactId>
            <version>3.1</version>
        </dependency>

        <!-- BoneCP -->
        <dependency>
            <groupId>com.jolbox</groupId>
            <artifactId>bonecp</artifactId>
            <version>${bonecp.version}</version>
        </dependency>

        <!-- JSR 349 -->
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.1.0.Final</version>
        </dependency>

        <!-- Hibernate validator -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.0.3.Final</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.3</version>
        </dependency>

        <!-- Jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- jTransfo -->
        <dependency>
            <groupId>org.jtransfo</groupId>
            <artifactId>jtransfo-core</artifactId>
            <version>${jtransfo.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jtransfo</groupId>
            <artifactId>jtransfo-joda-time</artifactId>
            <version>${jtransfo.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jtransfo</groupId>
            <artifactId>jtransfo-spring</artifactId>
            <version>${jtransfo.version}</version>
        </dependency>

        <!-- jOOQ -->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
            <version>${jooq.version}</version>
        </dependency>

        <!-- H2 Database -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
        </dependency>


        <dependency>
        	<groupId>org.postgresql</groupId>
        	<artifactId>postgresql</artifactId>
        	<version>${postgresql.version}</version>
            <!--<scope>provided</scope>-->
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>

        <!-- Servlet API 3.1.0 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>

        <!-- TESTING DEPENDENCIES -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.el</groupId>
            <artifactId>javax.el-api</artifactId>
            <version>3.0.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>el-impl</artifactId>
            <version>2.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

            <dependency>
                <groupId>org.apache.abdera</groupId>
                <artifactId>abdera-core</artifactId>
                <version>1.1.3</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.abdera</groupId>
                <artifactId>abdera-parser</artifactId>
                <version>1.1.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.abdera</groupId>
                <artifactId>abdera-client</artifactId>
                <version>1.1.3</version>
                <scope>test</scope>
            </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.5.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.googlecode.catch-exception</groupId>
            <artifactId>catch-exception</artifactId>
            <version>1.2.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${jsonpath.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path-assert</artifactId>
            <version>${jsonpath.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.springtestdbunit</groupId>
            <artifactId>spring-test-dbunit</artifactId>
            <version>1.1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.dbunit</groupId>
            <artifactId>dbunit</artifactId>
            <version>2.4.9</version> 
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>junit</artifactId>
                    <groupId>junit</groupId>
                </exclusion>
            </exclusions>
        </dependency>

		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>2.1.2</version>
		</dependency>
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-bindings-war</artifactId>
            <version>${opencmis.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-support</artifactId>
            <version>${opencmis.version}</version>
        </dependency>
        <dependency><!-- for development only -->
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-server-bindings</artifactId>
            <version>${opencmis.version}</version>
            <scope>provided</scope>
        </dependency>


            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>docservices</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>common</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>config</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>cmis</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>doccontrollers</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>docmanagement</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>amazon</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>filestorage</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>storageactions</artifactId>
                <version>0.1</version>
            </dependency>

            <dependency>
                <groupId>ru.doccloud</groupId>
                <artifactId>storagemanager</artifactId>
                <version>0.1</version>
            </dependency>

    </dependencies>

    </dependencyManagement>  

</project>

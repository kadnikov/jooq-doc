/**
 * This class is generated by jOOQ
 */
package net.petrikainulainen.spring.jooq.todo.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import net.petrikainulainen.spring.jooq.todo.db.Keys;
import net.petrikainulainen.spring.jooq.todo.db.Public;
import net.petrikainulainen.spring.jooq.todo.db.tables.records.LinksRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Links extends TableImpl<LinksRecord> {

	private static final long serialVersionUID = -1910807204;

	/**
	 * The reference instance of <code>public.links</code>
	 */
	public static final Links LINKS = new Links();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LinksRecord> getRecordType() {
		return LinksRecord.class;
	}

	/**
	 * The column <code>public.links.head_id</code>.
	 */
	public final TableField<LinksRecord, Integer> HEAD_ID = createField("head_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.links.tail_id</code>.
	 */
	public final TableField<LinksRecord, Integer> TAIL_ID = createField("tail_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>public.links</code> table reference
	 */
	public Links() {
		this("links", null);
	}

	/**
	 * Create an aliased <code>public.links</code> table reference
	 */
	public Links(String alias) {
		this(alias, LINKS);
	}

	private Links(String alias, Table<LinksRecord> aliased) {
		this(alias, aliased, null);
	}

	private Links(String alias, Table<LinksRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LinksRecord> getPrimaryKey() {
		return Keys.LINKS_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LinksRecord>> getKeys() {
		return Arrays.<UniqueKey<LinksRecord>>asList(Keys.LINKS_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<LinksRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<LinksRecord, ?>>asList(Keys.LINKS__LINKS_HEAD_ID_FKEY, Keys.LINKS__LINKS_TAIL_ID_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Links as(String alias) {
		return new Links(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Links rename(String name) {
		return new Links(name, null);
	}
}

/**
 * This class is generated by jOOQ
 */
package ru.doccloud.document.jooq.db.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ru.doccloud.document.jooq.db.Keys;
import ru.doccloud.document.jooq.db.Public;
import ru.doccloud.document.jooq.db.tables.records.UserRolesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRoles extends TableImpl<UserRolesRecord> {

	private static final long serialVersionUID = -886990909;

	/**
	 * The reference instance of <code>public.user_roles</code>
	 */
	public static final UserRoles USER_ROLES = new UserRoles();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UserRolesRecord> getRecordType() {
		return UserRolesRecord.class;
	}

	/**
	 * The column <code>public.user_roles.role</code>.
	 */
	public final TableField<UserRolesRecord, String> ROLE = createField("role", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * The column <code>public.user_roles.userid</code>.
	 */
	public final TableField<UserRolesRecord, String> USERID = createField("userid", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

	/**
	 * Create a <code>public.user_roles</code> table reference
	 */
	public UserRoles() {
		this("user_roles", null);
	}

	/**
	 * Create an aliased <code>public.user_roles</code> table reference
	 */
	public UserRoles(String alias) {
		this(alias, USER_ROLES);
	}

	private UserRoles(String alias, Table<UserRolesRecord> aliased) {
		this(alias, aliased, null);
	}

	private UserRoles(String alias, Table<UserRolesRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UserRolesRecord> getPrimaryKey() {
		return Keys.USER_ROLES_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UserRolesRecord>> getKeys() {
		return Arrays.<UniqueKey<UserRolesRecord>>asList(Keys.USER_ROLES_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<UserRolesRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<UserRolesRecord, ?>>asList(Keys.USER_ROLES__USER_ROLES_ROLE_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRoles as(String alias) {
		return new UserRoles(alias, this);
	}

	/**
	 * Rename this table
	 */
	public UserRoles rename(String name) {
		return new UserRoles(name, null);
	}
}
